
version: '3.9'

services:

    mosquitto:
        build: ./config/mosquitto
        volumes:
            - mosquitto-storage:/mosquitto/data
        networks:
            - internal
        ports:
            - 1883:1883
            - 9001:9001
        restart: always

    influxdb:
        image: influxdb:2.3.0
        ports:
            - '8086:8086'
        volumes:
            - influxdb-storage:/var/lib/influxdb
        networks:
            - internal
        environment:
            - DOCKER_INFLUXDB_INIT_MODE=setup
            - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
            - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
            - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
            - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 40s
        restart: always

    grafana:
        image: grafana/grafana:9.0.4
        ports:
            - '3333:3000'
        volumes:
            - grafana-storage:/var/lib/grafana
            - ./config/grafana/provisioning/:/etc/grafana/provisioning
        networks:
            - internal
        depends_on:
            - influxdb
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_SECURITY_ALLOW_EMBEDDING=true
            - GF_SECURITY_COOKIE_SAMESITE=false

        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 40s
        restart: always

    mongo:
        image: mongo:5.0.9
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
        networks: 
            - internal
        volumes:
            - mongodb-storage:/data/db
        ports: 
            - 27017:27017

    mongo-express:
        image: mongo-express:0.54.0
        restart: always
        ports:
            - 8081:8081
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
            - ME_CONFIG_MONGODB_SERVER=mongo
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_BASICAUTH_USERNAME=${EXPRESS_USERNAME}
            - ME_CONFIG_BASICAUTH_PASSWORD=${EXPRESS_PASSWORD}
        networks: 
            - internal
        depends_on:
            - mongo

    proxy:
        build: ./src/proxy
        ports:
            - "8082:8082"
            - "9090:9090/udp"
        environment:
            - INFLUX_HOST=influxdb
            - INFLUXDB_PORT=8086
            - INFLUXDB_ORG=${INFLUXDB_ORG}
            - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
            - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
            - MQTT_USERNAME=${MOSQUITTO_USERNAME}
            - MQTT_PASSWORD=${MOSQUITTO_PASSWORD}
            - MQTT_HOST=mosquitto
            - MQTT_PORT=1883
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
        restart: always
        networks: 
            - internal
        depends_on:
            - mongo
            - influxdb
            - mosquitto

    lomoapi:
        build: ./src/api_server
        ports:
            - "8888:8888"
        environment:
            - GRAFANA_HOST=grafana
            - GRAFANA_PORT=3000
            - GRAFANA_USER=${GRAFANA_USERNAME}
            - GRAFANA_PASS=${GRAFANA_PASSWORD}
            - MQTT_USERNAME=${MOSQUITTO_USERNAME}
            - MQTT_PASSWORD=${MOSQUITTO_PASSWORD}
            - MQTT_HOST=mosquitto
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_HOST=mongo
            - TELEGRAM_HOST=telegram:8087
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8888/"]
            interval: 60s
            timeout: 10s
            retries: 5
            start_period: 40s
        restart: always
        networks: 
            - internal
        depends_on:
            - mongo
            - grafana
            - influxdb
            - mosquitto

    telegram:
        build: ./src/telegram
        ports:
            - "8087:8087"
        environment:
            - LOMO_API_HOST=lomoapi:8888
            - TELEGRAM_TOKEN=${TELEGRAM_API_KEY}
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
        restart: always
        networks: 
            - internal
        depends_on:
            - mongo
            - lomoapi
    weather:
        build: ./src/weather
        environment:
            - INFLUX_HOST=influxdb
            - INFLUXDB_PORT=8086
            - INFLUXDB_ORG=${INFLUXDB_ORG}
            - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
            - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - API_KEY=${WEATHER_API_KERY}
            - SLEEP_TIME=1800
        restart: always
        networks: 
            - internal
        depends_on:
            - mongo
            - influxdb

    forecast:
        build: ./src/forecast
        environment:
            - INFLUX_HOST=influxdb
            - INFLUXDB_PORT=8086
            - INFLUXDB_ORG=${INFLUXDB_ORG}
            - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
            - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DB_NAME=${MONGO_DB_NAME}
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
        restart: always
        networks: 
            - internal
        depends_on:
            - mongo
            - influxdb
            
    # https_proxy:
    #     image: 'jc21/nginx-proxy-manager:latest'
    #     restart: unless-stopped
    #     ports:
    #     - '80:80'
    #     - '81:81'
    #     - '443:443'
    #     volumes:
    #     - ./data:/data
    #     - ./letsencrypt:/etc/letsencrypt

volumes:
    influxdb-storage:
    grafana-storage:
    mosquitto-storage:
    mongodb-storage:

networks:
    internal:
        name: internal-net
